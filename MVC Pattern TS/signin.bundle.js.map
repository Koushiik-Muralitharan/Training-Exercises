{"version":3,"file":"signin.bundle.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA;AACA,sBAAsB;;;;;;;UC3CtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,mBAAO,CAAC,2DAAyB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack:///./services/UserServices.ts","webpack:///webpack/bootstrap","webpack:///./signin.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UserRepository = void 0;\nclass UserRepository {\n    constructor() {\n        this.localstorageuserKey = \"UserArray\";\n        this.users = [];\n        this.users = this.UsersLocalStorage();\n    }\n    UsersLocalStorage() {\n        const storedUser = localStorage.getItem(this.localstorageuserKey);\n        return storedUser ? JSON.parse(storedUser) : [];\n    }\n    saveUsersToLocalStorage() {\n        localStorage.setItem(this.localstorageuserKey, JSON.stringify(this.users));\n    }\n    checkIfUserExists(useremail) {\n        return this.users.some((user) => user.email === useremail);\n    }\n    addUser(user) {\n        let result = this.checkIfUserExists(user.email);\n        if (result) {\n            const confirmPasswordError = document.getElementById(\"confirm-password-error\");\n            confirmPasswordError.innerText = \"User with this email already exists.\";\n            return;\n        }\n        this.users.push(user);\n        this.saveUsersToLocalStorage();\n        //this.renderUsers();\n        window.location.href = \"index.html\";\n        console.log(\"User Added:\", user);\n    }\n    getLoggedUser(userArray) {\n        let userAccounts = userArray.filter((user) => user.loggedStatus.trim().toLowerCase() === \"in\");\n        if (userAccounts.length === 0) {\n            console.log(\"No users found with loggedStatus 'in'\");\n            return null;\n        }\n        let userAccount = userAccounts[0];\n        console.log(`The logged user: ${userAccount}`);\n        return userAccount;\n    }\n}\nexports.UserRepository = UserRepository;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst UserServices_1 = require(\"./services/UserServices\");\nconst usersRepo = new UserServices_1.UserRepository();\n// Retrieve elements by ID and type cast them\nconst emailId = document.getElementById('email');\nconst password = document.getElementById('password');\nconst displayError = document.getElementById('display-error');\nconst loginButton = document.getElementById('login-button');\nconst emailErrors = document.getElementById('email-error');\nconst passcodeError = document.getElementById('passcode-error');\nif (!localStorage.getItem(\"UserArray\")) {\n    displayError.innerText = \"Please sign up to login.*\";\n}\nlet isValids = true;\nemailId.onblur = function () {\n    if (emailId.value === \"\") {\n        emailErrors.innerText = \"Enter the email.*\";\n        isValids = false;\n    }\n    else {\n        emailErrors.innerText = \"\";\n        isValids = true;\n    }\n};\npassword.onblur = function () {\n    if (password.value === \"\") {\n        passcodeError.innerText = \"Enter the password.*\";\n        isValids = false;\n    }\n    else {\n        passcodeError.innerText = \"\";\n        isValids = true;\n    }\n};\nloginButton.onclick = function (event) {\n    event.preventDefault();\n    if (!isValids) {\n        displayError.innerText = \"Please fill in all required fields.*\";\n        return;\n    }\n    const emailValue = emailId.value;\n    const passwordValue = password.value;\n    if (emailValue === 'admin@gmail.com' && passwordValue === \"admin\") {\n        window.location.href = \"admin.htm\";\n    }\n    if (usersRepo.checkIfUserExists(emailValue)) {\n        emailId.value = \"\";\n        password.value = \"\";\n        const userExists = usersRepo.users.some(user => user.email === emailValue && user.password === passwordValue);\n        usersRepo.users.forEach((user) => {\n            if (user.email === emailValue && user.password === passwordValue) {\n                user.loggedStatus = \"in\";\n            }\n        });\n        usersRepo.saveUsersToLocalStorage();\n        if (userExists) {\n            window.location.href = \"Main.htm\";\n        }\n        else {\n            displayError.innerText = \"Invalid email or password.*\";\n        }\n    }\n    else {\n        displayError.innerText = \"User does not exist. Please sign up.*\";\n    }\n};\n"],"names":[],"sourceRoot":""}